local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25) local v26={};for v42=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v42,v42 + 1 )),v1(v2(v25,1 + (v42% #v25) ,1 + (v42% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function() return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...) local v29=0;local v30;local v31;local v32;local v33;local v34;local v35;local v36;local v37;local v38;local v39;local v40;local v41;while true do if (v29==2) then function v34() local v43=0;local v44;local v45;while true do if (v43==1) then return (v45 * 256) + v44 ;end if (v43==0) then v44,v45=v9(v27,v30,v30 + 2 );v30=v30 + 2 ;v43=1;end end end v35=nil;function v35() local v46=0;local v47;local v48;local v49;local v50;while true do if (v46==0) then v47,v48,v49,v50=v9(v27,v30,v30 + 3 );v30=v30 + 4 ;v46=1;end if (v46==1) then return (v50 * 16777216) + (v49 * 65536) + (v48 * 256) + v47 ;end end end v36=nil;v29=3;end if (5==v29) then v41=nil;function v41(v51,v52,v53) local v54=0;local v55;local v56;local v57;while true do if (v54==0) then v55=v51[1];v56=v51[2];v54=1;end if (v54==1) then v57=v51[3];return function(...) local v91=v55;local v92=v56;local v93=v57;local v94=v39;local v95=1;local v96= -(1066 -(68 + 997));local v97={};local v98={...};local v99=v20("#",...) -1 ;local v100={};local v101={};for v116=0,v99 do if (v116>=v93) then v97[v116-v93 ]=v98[v116 + (1271 -(226 + 1044)) ];else v101[v116]=v98[v116 + 1 ];end end local v102=(v99-v93) + 1 ;local v103;local v104;while true do local v117=0;while true do if (v117==0) then v103=v91[v95];v104=v103[1];v117=1;end if (v117==1) then if (v104<=57) then if (v104<=28) then if (v104<=13) then if (v104<=6) then if (v104<=2) then if (v104<=0) then local v143=0;local v144;while true do if (v143==0) then v144=v103[2];v101[v144]=v101[v144](v101[v144 + 1 ]);break;end end elseif (v104>1) then for v344=v103[8 -6 ],v103[3] do v101[v344]=nil;end else v101[v103[2]][v103[3]]=v101[v103[4]];end elseif (v104<=4) then if (v104>3) then local v165=v103[2];local v166={v101[v165](v101[v165 + 1 ])};local v167=0;for v346=v165,v103[4] do local v347=0;while true do if (v347==0) then v167=v167 + 1 ;v101[v346]=v166[v167];break;end end end else v101[v103[2]]=v103[120 -(32 + 85) ];end elseif (v104==5) then v101[v103[2 + 0 ]]=v101[v103[1 + 2 ]]%v101[v103[4]] ;else local v171=0;local v172;while true do if (v171==0) then v172=v103[2];v101[v172]=v101[v172]();break;end end end elseif (v104<=9) then if (v104<=7) then v101[v103[2]]=v103[3];elseif (v104==8) then if  not v101[v103[2]] then v95=v95 + 1 ;else v95=v103[3];end else do return v101[v103[2]];end end elseif (v104<=11) then if (v104>10) then local v173=v103[2];local v174=v103[4];local v175=v173 + (959 -(892 + 65)) ;local v176={v101[v173](v101[v173 + 1 ],v101[v175])};for v348=1,v174 do v101[v175 + v348 ]=v176[v348];end local v177=v176[1];if v177 then v101[v175]=v177;v95=v103[3];else v95=v95 + 1 ;end else v101[v103[2]]=v53[v103[3]];end elseif (v104==12) then local v180=0;local v181;local v182;local v183;local v184;while true do if (v180==2) then for v442=v181,v96 do v184=v184 + 1 ;v101[v442]=v182[v184];end break;end if (v180==0) then v181=v103[2];v182,v183=v94(v101[v181](v21(v101,v181 + 1 ,v96)));v180=1;end if (1==v180) then v96=(v183 + v181) -1 ;v184=0;v180=2;end end else v95=v103[3];end elseif (v104<=20) then if (v104<=16) then if (v104<=14) then local v147=0;local v148;local v149;local v150;while true do if (v147==1) then v150=0 -0 ;for v366=v148,v103[4] do local v367=0;while true do if (0==v367) then v150=v150 + 1 ;v101[v366]=v149[v150];break;end end end break;end if (0==v147) then v148=v103[2];v149={v101[v148](v21(v101,v148 + 1 ,v96))};v147=1;end end elseif (v104>15) then local v186=v103[2];v101[v186](v21(v101,v186 + 1 ,v103[3]));else v101[v103[2]]=v53[v103[4 -1 ]];end elseif (v104<=18) then if (v104==17) then local v189=0;local v190;local v191;while true do if (v189==1) then v101[v190 + 1 ]=v191;v101[v190]=v191[v103[4]];break;end if (v189==0) then v190=v103[2];v191=v101[v103[353 -(87 + 263) ]];v189=1;end end elseif v101[v103[2]] then v95=v95 + 1 ;else v95=v103[3];end elseif (v104==19) then v101[v103[2]]= #v101[v103[3]];else v101[v103[2]]=v52[v103[3]];end elseif (v104<=24) then if (v104<=22) then if (v104==(201 -(67 + 113))) then local v195=0;while true do if (v195==0) then v101[v103[2 + 0 ]]=v103[3]~=0 ;v95=v95 + 1 ;break;end end else local v196=0;local v197;while true do if (0==v196) then v197=v103[2];v101[v197]=v101[v197](v21(v101,v197 + 1 ,v96));break;end end end elseif (v104==(56 -33)) then local v198=0;local v199;local v200;while true do if (v198==0) then v199=v103[2];v200=v101[v103[3 + 0 ]];v198=1;end if (1==v198) then v101[v199 + 1 ]=v200;v101[v199]=v200[v103[4]];break;end end else v101[v103[7 -5 ]]=v101[v103[955 -(802 + 150) ]] + v103[4] ;end elseif (v104<=26) then if (v104==25) then v101[v103[2]]=v101[v103[3]][v103[4]];else v101[v103[2]]= not v101[v103[3]];end elseif (v104>27) then v101[v103[2]]=v103[7 -4 ]~=(0 -0) ;else local v206=0;local v207;while true do if (v206==0) then v207=v103[2 + 0 ];v101[v207](v21(v101,v207 + 1 ,v96));break;end end end elseif (v104<=42) then if (v104<=35) then if (v104<=31) then if (v104<=29) then v101[v103[2]]=v103[3]~=0 ;elseif (v104>(1027 -(915 + 82))) then v101[v103[2]]();else local v208=v103[5 -3 ];v101[v208](v21(v101,v208 + 1 ,v103[3]));end elseif (v104<=33) then if (v104==32) then local v209=v103[2];v101[v209](v101[v209 + 1 ]);else v101[v103[2]]=v101[v103[3]] + v101[v103[4]] ;end elseif (v104==34) then v101[v103[2]]=v103[3] + v101[v103[4]] ;else do return v101[v103[2]]();end end elseif (v104<=38) then if (v104<=36) then local v152=0;local v153;local v154;local v155;local v156;while true do if (1==v152) then v96=(v155 + v153) -1 ;v156=0;v152=2;end if (v152==0) then v153=v103[2];v154,v155=v94(v101[v153](v21(v101,v153 + 1 ,v96)));v152=1;end if (v152==2) then for v369=v153,v96 do local v370=0;while true do if (v370==0) then v156=v156 + 1 + 0 ;v101[v369]=v154[v156];break;end end end break;end end elseif (v104==37) then for v353=v103[2],v103[3] do v101[v353]=nil;end else v101[v103[2]][v101[v103[3]]]=v103[4];end elseif (v104<=40) then if (v104==39) then v101[v103[2]]=v41(v92[v103[3]],nil,v53);elseif (v101[v103[2]]<v101[v103[4]]) then v95=v103[3];else v95=v95 + 1 ;end elseif (v104>41) then do return;end else local v215=0;local v216;while true do if (v215==0) then v216=v103[2 -0 ];v101[v216](v101[v216 + 1 ]);break;end end end elseif (v104<=49) then if (v104<=45) then if (v104<=43) then v101[v103[2]][v103[3]]=v103[4];elseif (v104>44) then local v217=0;local v218;local v219;local v220;local v221;while true do if (0==v217) then v218=v103[2];v219,v220=v94(v101[v218](v21(v101,v218 + 1 ,v103[3])));v217=1;end if (v217==1) then v96=(v220 + v218) -1 ;v221=0;v217=2;end if (v217==2) then for v445=v218,v96 do local v446=0;while true do if (v446==0) then v221=v221 + (1188 -(1069 + 118)) ;v101[v445]=v219[v221];break;end end end break;end end elseif (v101[v103[4 -2 ]]<v101[v103[4]]) then v95=v95 + 1 ;else v95=v103[6 -3 ];end elseif (v104<=47) then if (v104==46) then local v222=0;local v223;while true do if (v222==0) then v223=v101[v103[4]];if v223 then v95=v95 + 1 ;else local v486=0;while true do if (v486==0) then v101[v103[2]]=v223;v95=v103[1 + 2 ];break;end end end break;end end else v101[v103[2]]=v101[v103[3]] -v101[v103[4]] ;end elseif (v104>(84 -36)) then local v225=0;local v226;local v227;local v228;local v229;while true do if (v225==0) then v226=v103[2];v227,v228=v94(v101[v226](v101[v226 + 1 ]));v225=1;end if (v225==2) then for v447=v226,v96 do local v448=0;while true do if (v448==0) then v229=v229 + 1 ;v101[v447]=v227[v229];break;end end end break;end if (v225==1) then v96=(v228 + v226) -1 ;v229=0;v225=2;end end elseif (v101[v103[2]]==v103[4]) then v95=v95 + 1 ;else v95=v103[3];end elseif (v104<=53) then if (v104<=51) then if (v104>50) then if (v101[v103[2]]==v101[v103[4]]) then v95=v95 + 1 + 0 ;else v95=v103[3];end else local v230=0;local v231;local v232;local v233;while true do if (v230==0) then v231=v103[2];v232={v101[v231](v101[v231 + 1 ])};v230=1;end if (v230==1) then v233=0;for v449=v231,v103[4] do local v450=0;while true do if (v450==0) then v233=v233 + 1 ;v101[v449]=v232[v233];break;end end end break;end end end elseif (v104>52) then v101[v103[2]]={};else v101[v103[2]]=v103[3] + v101[v103[4]] ;end elseif (v104<=55) then if (v104>(845 -(368 + 423))) then v101[v103[6 -4 ]]=v101[v103[3]]%v101[v103[4]] ;else local v237=0;local v238;local v239;local v240;while true do if (v237==1) then v240=v101[v238 + 2 ];if (v240>0) then if (v239>v101[v238 + 1 ]) then v95=v103[3];else v101[v238 + 3 ]=v239;end elseif (v239<v101[v238 + 1 ]) then v95=v103[3];else v101[v238 + 3 ]=v239;end break;end if (v237==0) then v238=v103[2];v239=v101[v238];v237=1;end end end elseif (v104>56) then local v241=0;local v242;while true do if (v241==0) then v242=v103[20 -(10 + 8) ];v101[v242]=v101[v242](v101[v242 + 1 ]);break;end end else local v243=0;local v244;while true do if (v243==0) then v244=v103[2];v101[v244]=v101[v244](v21(v101,v244 + 1 ,v103[3]));break;end end end elseif (v104<=86) then if (v104<=71) then if (v104<=64) then if (v104<=60) then if (v104<=58) then if (v101[v103[2]]~=v101[v103[15 -11 ]]) then v95=v95 + 1 ;else v95=v103[3];end elseif (v104>(501 -(416 + 26))) then local v246=v103[2];do return v101[v246](v21(v101,v246 + 1 ,v103[3]));end elseif (v101[v103[2]]<v101[v103[4]]) then v95=v103[3];else v95=v95 + 1 ;end elseif (v104<=62) then if (v104==61) then local v247=0;local v248;while true do if (v247==0) then v248=v103[2];do return v101[v248](v21(v101,v248 + 1 ,v103[3]));end break;end end else local v249=0;local v250;while true do if (v249==0) then v250=v103[2];do return v21(v101,v250,v96);end break;end end end elseif (v104==63) then v101[v103[2]]=v101[v103[3]] + v103[4] ;else v101[v103[2]][v101[v103[9 -6 ]]]=v101[v103[4]];end elseif (v104<=67) then if (v104<=65) then if (v101[v103[2]]~=v101[v103[4]]) then v95=v95 + 1 ;else v95=v103[3];end elseif (v104>66) then v101[v103[2]]=v101[v103[3]]%v103[4] ;elseif  not v101[v103[2]] then v95=v95 + 1 ;else v95=v103[3];end elseif (v104<=69) then if (v104==68) then local v256=0;local v257;local v258;while true do if (v256==0) then v257=v103[2];v258=v101[v257];v256=1;end if (v256==1) then for v451=v257 + 1 ,v96 do v15(v258,v101[v451]);end break;end end else v101[v103[2]]=v101[v103[3]][v103[4]];end elseif (v104>70) then local v261=0;local v262;while true do if (v261==0) then v262=v103[2];do return v21(v101,v262,v262 + v103[2 + 1 ] );end break;end end else v101[v103[2]]=v101[v103[3]];end elseif (v104<=78) then if (v104<=74) then if (v104<=72) then v101[v103[2]]=v101[v103[3]] -v101[v103[4]] ;elseif (v104==73) then local v265=0;local v266;local v267;local v268;while true do if (v265==1) then v268=0;for v452=v266,v103[4] do local v453=0;while true do if (0==v453) then v268=v268 + 1 ;v101[v452]=v267[v268];break;end end end break;end if (v265==0) then v266=v103[2];v267={v101[v266](v21(v101,v266 + 1 ,v96))};v265=1;end end else v101[v103[2]]=v101[v103[4 -1 ]]%v103[4] ;end elseif (v104<=76) then if (v104>75) then v101[v103[2]]();else local v270=0;local v271;local v272;local v273;while true do if (v270==0) then v271=v103[440 -(145 + 293) ];v272=v101[v271];v270=1;end if (v270==1) then v273=v101[v271 + (432 -(44 + 386)) ];if (v273>0) then if (v272>v101[v271 + 1 ]) then v95=v103[3];else v101[v271 + 3 ]=v272;end elseif (v272<v101[v271 + 1 ]) then v95=v103[3];else v101[v271 + 3 ]=v272;end break;end end end elseif (v104==77) then if (v103[1488 -(998 + 488) ]==v101[v103[2 + 2 ]]) then v95=v95 + 1 ;else v95=v103[3];end else local v274=v103[2];local v275=v103[4];local v276=v274 + 2 ;local v277={v101[v274](v101[v274 + 1 ],v101[v276])};for v355=1 + 0 ,v275 do v101[v276 + v355 ]=v277[v355];end local v278=v277[1];if v278 then local v378=0;while true do if (v378==0) then v101[v276]=v278;v95=v103[3];break;end end else v95=v95 + 1 ;end end elseif (v104<=82) then if (v104<=(852 -(201 + 571))) then if (v104>79) then local v279=0;local v280;while true do if (v279==0) then v280=v103[2];v101[v280]=v101[v280](v21(v101,v280 + 1 ,v103[3]));break;end end else local v281=v103[2];local v282,v283=v94(v101[v281](v101[v281 + 1 ]));v96=(v283 + v281) -(1139 -(116 + 1022)) ;local v284=0;for v358=v281,v96 do local v359=0;while true do if (v359==0) then v284=v284 + 1 ;v101[v358]=v282[v284];break;end end end end elseif (v104==81) then v101[v103[2]][v101[v103[3]]]=v103[4];else v52[v103[3]]=v101[v103[2]];end elseif (v104<=84) then if (v104>83) then local v289=v103[8 -6 ];local v290=v101[v289];for v360=v289 + 1 ,v96 do v15(v290,v101[v360]);end else local v291=0;local v292;local v293;local v294;local v295;while true do if (v291==0) then v292=v103[2];v293,v294=v94(v101[v292](v21(v101,v292 + 1 ,v103[2 + 1 ])));v291=1;end if (v291==1) then v96=(v294 + v292) -1 ;v295=0;v291=2;end if (v291==2) then for v456=v292,v96 do local v457=0;while true do if (v457==0) then v295=v295 + (3 -2) ;v101[v456]=v293[v295];break;end end end break;end end end elseif (v104==(301 -216)) then v101[v103[2]]=v101[v103[3]] * v101[v103[4]] ;else local v297=0;local v298;local v299;local v300;while true do if (v297==1) then v300={};v299=v18({},{[v7("\18\64\238\137\173\163\53","\198\77\31\135\231\201")]=function(v458,v459) local v460=0;local v461;while true do if (v460==0) then v461=v300[v459];return v461[1][v461[861 -(814 + 45) ]];end end end,[v7("\152\105\179\225\30\174\88\185\225\17","\105\199\54\221\132")]=function(v462,v463,v464) local v465=0;local v466;while true do if (v465==0) then v466=v300[v463];v466[1][v466[2]]=v464;break;end end end});v297=2;end if (v297==0) then v298=v92[v103[3]];v299=nil;v297=1;end if (v297==2) then for v467=1,v103[4] do local v468=0;local v469;while true do if (v468==1) then if (v469[1]==70) then v300[v467-1 ]={v101,v469[3]};else v300[v467-1 ]={v52,v469[3]};end v100[ #v100 + 1 ]=v300;break;end if (v468==0) then v95=v95 + 1 ;v469=v91[v95];v468=1;end end end v101[v103[2]]=v41(v298,v299,v53);break;end end end elseif (v104<=101) then if (v104<=93) then if (v104<=89) then if (v104<=87) then if (v101[v103[2]]==v103[4]) then v95=v95 + 1 ;else v95=v103[3];end elseif (v104==88) then v95=v103[7 -4 ];else local v303=0;local v304;while true do if (v303==0) then v304=v103[2];v101[v304](v21(v101,v304 + 1 ,v96));break;end end end elseif (v104<=91) then if (v104>90) then local v305=0;local v306;local v307;local v308;while true do if (v305==1) then v308=v101[v306] + v307 ;v101[v306]=v308;v305=2;end if (v305==0) then v306=v103[2];v307=v101[v306 + 2 ];v305=1;end if (v305==2) then if (v307>0) then if (v308<=v101[v306 + 1 ]) then local v514=0;while true do if (v514==0) then v95=v103[1 + 2 ];v101[v306 + 3 ]=v308;break;end end end elseif (v308>=v101[v306 + 1 ]) then local v515=0;while true do if (v515==0) then v95=v103[3];v101[v306 + 3 ]=v308;break;end end end break;end end else v101[v103[2]]=v101[v103[3]];end elseif (v104>92) then v101[v103[2]]=v41(v92[v103[3]],nil,v53);else local v312=v103[1 + 1 ];v101[v312]=v101[v312](v21(v101,v312 + 1 ,v96));end elseif (v104<=(982 -(261 + 624))) then if (v104<=95) then if (v104==94) then local v314=0;local v315;while true do if (0==v314) then v315=v103[2];do return v21(v101,v315,v96);end break;end end else do return;end end elseif (v104>96) then v101[v103[3 -1 ]]=v101[v103[3]] + v101[v103[4]] ;else v101[v103[2]]= #v101[v103[1083 -(1020 + 60) ]];end elseif (v104<=(1522 -(630 + 793))) then if (v104==98) then if (v103[2]==v101[v103[4]]) then v95=v95 + 1 ;else v95=v103[3];end elseif (v101[v103[6 -4 ]]<v101[v103[4]]) then v95=v95 + 1 ;else v95=v103[14 -11 ];end elseif (v104==100) then if v101[v103[2]] then v95=v95 + 1 ;else v95=v103[3];end else local v318=0;local v319;while true do if (v318==0) then v319=v101[v103[4]];if v319 then v95=v95 + 1 ;else v101[v103[2]]=v319;v95=v103[3];end break;end end end elseif (v104<=108) then if (v104<=104) then if (v104<=102) then v52[v103[3]]=v101[v103[2]];elseif (v104==103) then if (v101[v103[2]]==v101[v103[4]]) then v95=v95 + 1 ;else v95=v103[3];end else v101[v103[2]]=v101[v103[3]] * v101[v103[2 + 2 ]] ;end elseif (v104<=(364 -258)) then if (v104==105) then v101[v103[2]]= not v101[v103[3]];else do return v101[v103[2]]();end end elseif (v104==107) then local v322=0;local v323;while true do if (0==v322) then v323=v103[1749 -(760 + 987) ];v101[v323]=v101[v323]();break;end end else local v324=0;local v325;local v326;local v327;while true do if (v324==1) then v327=v101[v325] + v326 ;v101[v325]=v327;v324=2;end if (2==v324) then if (v326>0) then if (v327<=v101[v325 + 1 ]) then local v516=0;while true do if (v516==0) then v95=v103[3];v101[v325 + 3 ]=v327;break;end end end elseif (v327>=v101[v325 + 1 ]) then local v517=0;while true do if (v517==0) then v95=v103[3];v101[v325 + 3 ]=v327;break;end end end break;end if (v324==0) then v325=v103[2];v326=v101[v325 + 2 ];v324=1;end end end elseif (v104<=112) then if (v104<=110) then if (v104==109) then v101[v103[2]]=v52[v103[3]];else v101[v103[2]][v103[3]]=v101[v103[4]];end elseif (v104>111) then v101[v103[2]][v101[v103[3]]]=v101[v103[4]];else v101[v103[2]][v103[3]]=v103[4];end elseif (v104<=(2027 -(1789 + 124))) then if (v104>113) then do return v101[v103[2]];end else local v336=0;while true do if (v336==0) then v101[v103[768 -(745 + 21) ]]=v103[3]~=0 ;v95=v95 + 1 ;break;end end end elseif (v104>115) then v101[v103[2]]={};else local v338=0;local v339;local v340;local v341;while true do if (v338==0) then v339=v92[v103[3]];v340=nil;v338=1;end if (v338==2) then for v470=1 + 0 ,v103[4] do local v471=0;local v472;while true do if (v471==0) then v95=v95 + 1 ;v472=v91[v95];v471=1;end if (v471==1) then if (v472[1]==(192 -122)) then v341[v470-1 ]={v101,v472[3]};else v341[v470-1 ]={v52,v472[3]};end v100[ #v100 + 1 ]=v341;break;end end end v101[v103[7 -5 ]]=v41(v339,v340,v53);break;end if (v338==1) then v341={};v340=v18({},{[v7("\147\134\5\141\37\200\180","\173\204\217\108\227\65")]=function(v473,v474) local v475=0;local v476;while true do if (v475==0) then v476=v341[v474];return v476[1][v476[2]];end end end,[v7("\210\255\80\198\34\228\206\90\198\45","\85\141\160\62\163")]=function(v477,v478,v479) local v480=0;local v481;while true do if (v480==0) then v481=v341[v478];v481[1][v481[2]]=v479;break;end end end});v338=2;end end end v95=v95 + 1 ;break;end end end end;end end end return v41(v40(),{},v28)(...);end if (v29==0) then v30=1;v31=nil;v27=v12(v11(v27,5),v7("\98\112","\133\76\94\163\182\192"),function(v58) if (v9(v58,5 -3 )==(226 -147)) then v31=v8(v11(v58,1,1 -0 ));return "";else local v82=0;local v83;while true do if (v82==0) then v83=v10(v8(v58,41 -25 ));if v31 then local v122=0;local v123;while true do if (v122==0) then v123=v13(v83,v31);v31=nil;v122=1;end if (1==v122) then return v123;end end else return v83;end break;end end end end);v32=nil;v29=1;end if (v29==4) then v39=nil;function v39(...) return {...},v20("#",...);end v40=nil;function v40() local v59=0;local v60;local v61;local v62;local v63;local v64;local v65;while true do if (v59==0) then v60={};v61={};v62={};v63={v60,v61,nil,v62};v59=1;end if (2==v59) then for v105=1,v35() do local v106=0;local v107;while true do if (0==v106) then v107=v33();if (v32(v107,1,1638 -(1523 + 114) )==0) then local v127=0;local v128;local v129;local v130;while true do if (2==v127) then if (v32(v129,1,1)==1) then v130[2]=v65[v130[2]];end if (v32(v129,2,2)==1) then v130[3]=v65[v130[3]];end v127=3;end if (v127==1) then v130={v34(),v34(),nil,nil};if (v128==0) then local v136=0;while true do if (v136==0) then v130[3]=v34();v130[4]=v34();break;end end elseif (v128==1) then v130[3]=v35();elseif (v128==2) then v130[3]=v35() -(2^(15 + 1)) ;elseif (v128==(3 -0)) then local v162=0;while true do if (v162==0) then v130[3]=v35() -(2^16) ;v130[4]=v34();break;end end end v127=2;end if (v127==0) then v128=v32(v107,2,3);v129=v32(v107,4,6);v127=1;end if (v127==3) then if (v32(v129,3,3)==1) then v130[4]=v65[v130[4]];end v60[v105]=v130;break;end end end break;end end end for v108=1,v35() do v61[v108-1 ]=v40();end return v63;end if (v59==1) then v64=v35();v65={};for v110=1,v64 do local v111=v33();local v112;if (v111==1) then v112=v33()~=0 ;elseif (v111==2) then v112=v36();elseif (v111==3) then v112=v37();end v65[v110]=v112;end v63[3]=v33();v59=2;end end end v29=5;end if (v29==1) then function v32(v66,v67,v68) if v68 then local v84=(v66/(2^(v67-1)))%(2^(((v68-1) -(v67-1)) + 1)) ;return v84-(v84%1) ;else local v85=0;local v86;while true do if (v85==0) then v86=(621 -(555 + 64))^(v67-1) ;return (((v66%(v86 + v86))>=v86) and 1) or 0 ;end end end end v33=nil;function v33() local v69=0;local v70;while true do if (v69==1) then return v70;end if (v69==0) then v70=v9(v27,v30,v30);v30=v30 + 1 ;v69=1;end end end v34=nil;v29=2;end if (3==v29) then function v36() local v71=0;local v72;local v73;local v74;local v75;local v76;local v77;while true do if (3==v71) then if (v76==0) then if (v75==0) then return v77 * (927 -(214 + 713)) ;else local v124=0;while true do if (v124==0) then v76=1;v74=0;break;end end end elseif (v76==(513 + 1534)) then return ((v75==(0 + 0)) and (v77 * (1/0))) or (v77 * NaN) ;end return v16(v77,v76-1023 ) * (v74 + (v75/(2^52))) ;end if (v71==1) then v74=1;v75=(v32(v73,1,951 -(857 + 74) ) * ((570 -(367 + 201))^32)) + v72 ;v71=2;end if (v71==0) then v72=v35();v73=v35();v71=1;end if (v71==2) then v76=v32(v73,21,31);v77=((v32(v73,32)==1) and  -1) or 1 ;v71=3;end end end v37=nil;function v37(v78) local v79=0;local v80;local v81;while true do if (v79==0) then v80=nil;if  not v78 then v78=v35();if (v78==0) then return "";end end v79=1;end if (v79==1) then v80=v11(v27,v30,(v30 + v78) -1 );v30=v30 + v78 ;v79=2;end if (v79==2) then v81={};for v114=1, #v80 do v81[v114]=v10(v9(v11(v80,v114,v114)));end v79=3;end if (3==v79) then return v14(v81);end end end v38=v35;v29=4;end end end return v23("LOL!",v17(),...);
-- ⚠️ WARNING: integrity protected!
--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.4) ~  Much Love, Ferib 

]]--
